{"version":3,"sources":["components/navigation.jsx","components/gallery.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","Gallery","alt","role","aria-controls","aria-selected","aria-labelledby","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","data","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0PAAaA,EAAa,SAACC,GACzB,OACE,qBAAKC,GAAG,OAAOC,UAAU,yCAAzB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,yBACEC,KAAK,SACLD,UAAU,0BACVE,cAAY,WACZC,cAAY,gCAJd,UAMG,IACD,sBAAMH,UAAU,UAAhB,+BAAmD,IACnD,sBAAMA,UAAU,aAAmB,IACnC,sBAAMA,UAAU,aAAmB,IACnC,sBAAMA,UAAU,aAAmB,OAErC,mBAAGA,UAAU,2BAA2BI,KAAK,wBAA7C,SACE,qBAAKC,IAAI,oBAAoBL,UAAU,6CACpC,OAGP,qBACEA,UAAU,2BACVD,GAAG,uCCtBAO,G,UAAU,SAACR,GACtB,OACE,qBAAKC,GAAG,YAAYC,UAAU,cAA9B,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UAEA,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACG,IACD,qBAAKK,IAAI,qBAAqBL,UAAU,iBAAiBO,IAAI,KAAM,OAErE,qBAAKP,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,4CACA,+GACA,8KAEA,0NAEA,mBAAGA,UAAU,iBAAiBI,KAAK,2BAA2BI,KAAK,SAAnE,0CAMR,qBAAIR,UAAU,qBAAqBD,GAAG,YAAYS,KAAK,UAAvD,UACN,oBAAIR,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkBD,GAAG,iBAAiBG,cAAY,OAAOE,KAAK,cAAcI,KAAK,MAAMC,gBAAc,aAAaC,gBAAc,OAA7I,oBAEF,oBAAIV,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWD,GAAG,oBAAoBG,cAAY,OAAOE,KAAK,iBAAiBI,KAAK,MAAMC,gBAAc,gBAAgBC,gBAAc,QAA/I,uBAEF,oBAAIV,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWD,GAAG,oBAAoBG,cAAY,OAAOE,KAAK,iBAAiBI,KAAK,MAAMC,gBAAc,gBAAgBC,gBAAc,QAA/I,wBAGJ,sBAAKV,UAAU,cAAcD,GAAG,mBAAhC,UACE,qBAAKC,UAAU,4BAA4BD,GAAG,aAAaS,KAAK,WAAWG,kBAAgB,iBAA3F,2JAEA,qBAAKX,UAAU,gBAAgBD,GAAG,gBAAgBS,KAAK,WAAWG,kBAAgB,oBAAlF,uMAEA,qBAAKX,UAAU,gBAAgBD,GAAG,gBAAgBS,KAAK,WAAWG,kBAAgB,oBAAlF,6B,uBCXaC,G,MAnBO,IAAIC,IAAa,eAAgB,CACrDC,MAAO,IACPC,iBAAiB,IAGP,WAAO,IAAD,EAC8BC,mBAAS,IADvC,mBACTC,EADS,KACQC,EADR,KAMhB,OAJAC,qBAAU,WACRD,EAAmBE,KAClB,IAGD,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAASC,KAAMJ,EAAgBX,eChBjBgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.5421cc18.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='https://patrocima.com'>\n            <img src=\"img/patrocima.png\" className='logo justify-content-start navbar-left'/>\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          \n        </div>\n      </div>\n    </nav>\n  )\n}\n","import { Image } from \"./image\";\n\nexport const Gallery = (props) => {\n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='row'>\n\n        <div className=\"container talent-item\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6\">\n              {\" \"}\n              <img src=\"img/talento/01.jpg\" className=\"img-responsive\" alt=\"\" />{\" \"}\n            </div>\n            <div className=\"col-xs-12 col-md-6\">\n              <div className=\"about-text talent-description\">\n                <h2>Mel Krywoj</h2>\n                <h3>Apasionada por lo que hace, en su libertad elige este deporte una y otra vez.</h3>\n                <p>Hoy es una promesa del tenis Argentino y sueña con pisar las \"grandes ligas\" a nivel internacional \n                  postulándose en el top 50 del mundo.</p>\n                <p>Correr, aguantar y jugar con variantes son sus fuertes. Su vida está dedicada al tenis, lo sufre, lo transpira, \n                  lo piensa, lo ama y lo vuelve a elegir cada vez que golpea una pelota.</p>\n                <a className=\"btn btn-custom\" href=\"https://mpago.la/19nApZs\" role=\"button\">Comprar TalenToken</a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n  <li className=\"nav-item\">\n    <a className=\"nav-link active\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"#pills-home\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">Meta</a>\n  </li>\n  <li className=\"nav-item\">\n    <a className=\"nav-link\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"#pills-profile\" role=\"tab\" aria-controls=\"pills-profile\" aria-selected=\"false\">Acuerdo</a>\n  </li>\n  <li className=\"nav-item\">\n    <a className=\"nav-link\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"#pills-contact\" role=\"tab\" aria-controls=\"pills-contact\" aria-selected=\"false\">Redes</a>\n  </li>\n</ul>\n<div className=\"tab-content\" id=\"pills-tabContent\">\n  <div className=\"tab-pane fade show active\" id=\"pills-home\" role=\"tabpanel\" aria-labelledby=\"pills-home-tab\">Hoy es una promesa del tenis Argentino y sueña con pisar las \"grandes ligas\" a nivel internacional \n                  postulándose en el top 50 del mundo.</div>\n  <div className=\"tab-pane fade\" id=\"pills-profile\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\">Correr, aguantar y jugar con variantes son sus fuertes. Su vida está dedicada al tenis, lo sufre, lo transpira, \n                  lo piensa, lo ama y lo vuelve a elegir cada vez que golpea una pelota.</div>\n  <div className=\"tab-pane fade\" id=\"pills-contact\" role=\"tabpanel\" aria-labelledby=\"pills-contact-tab\">...</div>\n</div>\n\n        \n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Services } from \"./components/services\";\nimport { Gallery } from \"./components/gallery\";\nimport { Testimonials } from \"./components/testimonials\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Gallery data={landingPageData.Gallery}/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}